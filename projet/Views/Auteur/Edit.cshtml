@model projet.ViewModels.AuteurEditViewModel

@{
    ViewBag.Title = "Edit Auteur";
    // Get the full path of the existing Livre photo for display
}

<form asp-controller="Auteur" asp-action="edit" enctype="multipart/form-data" method="post" class="mt-3">
    <div asp-validation-summary="All" class="text-danger">
    </div>
    @*Use hidden input elements to store Livre id and ExistingPhotoPath
        which we need when we submit the form and update data in the database*@
    <input hidden asp-for="Id" />

    @*Bind to the properties of the LivreEditViewModel. The asp-for tag helper
        takes care of displaying the existing data in the respective input elements*@
    <div class="form-group row">
        <label asp-for="Nom" class="col-sm-2 col-form-label"></label>
        <div class="col-sm-10">
            <input asp-for="Nom" class="form-control" placeholder="Nom">
            <span asp-validation-for="Nom" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group row">
        <label asp-for="Prenom" class="col-sm-2 col-form-label"></label>
        <div class="col-sm-10">
            <input asp-for="Prenom" class="form-control" placeholder="Prenom">
            <span asp-validation-for="Prenom" class="text-danger"></span>
        </div>
    </div>
    
    


    <div class="form-group row">
        <div class="col-sm-10">
            <button type="submit" class="btn btn-primary">Update</button>
            <a asp-action="index" asp-controller="Category" class="btn btn-primary">Cancel</a>
        </div>
    </div>

    @section Scripts {
        <script>
            $(document).ready(function () {
                $('.custom-file-input').on("change", function () {
                    var fileName = $(this).val().split("\\").pop();
                    $(this).next('.custom-file-label').html(fileName);
                });
            });
        </script>
    }
</form>